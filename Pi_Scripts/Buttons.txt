new changes
update Teensy firmware 
update
	os.system('echo shutdown button pressed | wall')
sudo nano /usr/local/bin/listen-for-shutdown.py


************************************************
************************************************
************************************************
************************************************
//SETUP SHUTDOWN BUTTON
https://howchoo.com/g/mwnlytk3zmm/how-to-add-a-power-button-to-your-raspberry-pi

sudo nano listen-for-shutdown.py

------------------------------------------------
#!/usr/bin/env python

import RPi.GPIO as GPIO
import subprocess
import os
import time

GPIO.setmode(GPIO.BCM)
GPIO.setup(3, GPIO.IN, pull_up_down=GPIO.PUD_UP)

while True:
	GPIO.wait_for_edge(3, GPIO.FALLING)
	#os.system('echo falling | wall')
	can_shutdown = True;

	for x in range(0, 10):
		time.sleep(0.1)
		if(GPIO.input(3) != 0):
        		#os.system('echo didnt stay pressed long enough | wall')
			can_shutdown = False;
			break;

	if(can_shutdown):
		os.system('echo shutdown button pressed | wall')
		subprocess.call(['shutdown', '-h', 'now'], shell=False)	



------------------------------------------------

sudo mv listen-for-shutdown.py /usr/local/bin/
sudo chmod +x /usr/local/bin/listen-for-shutdown.py

sudo nano listen-for-shutdown.sh

------------------------------------------------
#! /bin/sh

### BEGIN INIT INFO
# Provides:          listen-for-shutdown.py
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
### END INIT INFO

# If you want a command to always run, put it here

# Carry out specific functions when asked to by the system
case "$1" in
  start)
    echo "Starting listen-for-shutdown.py"
    /usr/local/bin/listen-for-shutdown.py &
    ;;
  stop)
    echo "Stopping listen-for-shutdown.py"
    pkill -f /usr/local/bin/listen-for-shutdown.py
    ;;
  *)
    echo "Usage: /etc/init.d/listen-for-shutdown.sh {start|stop}"
    exit 1
    ;;
esac

exit 0
------------------------------------------------

sudo mv listen-for-shutdown.sh /etc/init.d/
sudo chmod +x /etc/init.d/listen-for-shutdown.sh
sudo update-rc.d listen-for-shutdown.sh defaults
sudo /etc/init.d/listen-for-shutdown.sh start

************************************************
************************************************
************************************************
************************************************
//SETUP SSH
sudo raspi-config
	5 Interfacing Options  Configure connections to peripherals 
		Enable/Disable remote command line access to your Pi using SSH
			ENABLE
	1 Change User Password Change password for the current user
		squiggles

from host computer:
	ssh pi@ip-address
	[password] squiggles


************************************************
************************************************
************************************************
************************************************
//SETUP REPOS

git clone https://github.com/michaelkrzyzaniak/Dr_Squiggles.git
cd Dr_Squiggles/
git clone https://github.com/michaelkrzyzaniak/Beat-and-Tempo-Tracking.git

chmod +x /home/pi/Dr_Squiggles/Pi_Scripts/startup.sh

[download repo, compile and run with ]
[/home/pi/Dr_Squiggles/Pi_Scripts/startup.sh]

crontab -e 
[choose nano]
@reboot    sleep 29; nohup /home/pi/Dr_Squiggles/Pi_Scripts/startup.sh 2>&1 > /dev/null
[save in default location (temp/blah/blah)]


------------------------------------------------
TURN OFF WAKE ON GPIO
vcgencmd bootloader_config
cp /lib/firmware/raspberrypi/bootloader/critical/pieeprom-2019-09-10.bin pieeprom.bin
rpi-eeprom-config pieeprom.bin > bootconf.txt
sudo nano bootconf.txt
WAKE_ON_GPIO = 0
rpi-eeprom-config --out pieeprom-new.bin --config bootconf.txt pieeprom.bin
sudo rpi-eeprom-update -d -f ./pieeprom-new.bin
sudo reboot 


************************************************
************************************************
************************************************
************************************************
